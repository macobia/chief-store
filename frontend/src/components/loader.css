:root {
  --bg: #f6f8fc;
  --primary: #50c878;
  --secondary: #705cff60;
  --cube-side: 4.75rem;
  --cube-side-half: calc(var(--cube-side) / 2);
}

.loader-wrapper {
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: 'Poppins', sans-serif;
  flex-direction: column;
}

/* Cube */
.cube-wrapper {
  min-height: 4rem;
  position: relative;
}

@keyframes rotate {
  0% {
    transform: rotateX(-37.5deg) rotateY(45deg);
  }
  50% {
    transform: rotateX(-37.5deg) rotateY(405deg);
  }
  100% {
    transform: rotateX(-37.5deg) rotateY(405deg);
  }
}

.cube,
.cube * {
  position: absolute;
  width: var(--cube-side);
  height: var(--cube-side);
  top: 0.25rem;
  left: -0.4rem;
}
.sides {
  animation: rotate 3s ease infinite;
  animation-delay: 0.8s;
  transform-style: preserve-3d;
  transform: rotateX(-37.5deg) rotateY(45deg);
}
.cube .sides * {
  box-sizing: border-box;
  background: var(--primary);
  border: 0.1rem solid white;
}
.cube .sides .top {
  animation: top-animation 3s ease infinite;
  animation-delay: 0ms;
  transform: rotateX(90deg) translateZ(var(--cube-side));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

@keyframes top-animation {
  0% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(var(--cube-side));
  }
  20% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(var(--cube-side-half));
  }
  70% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(var(--cube-side-half));
  }
  90% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(var(--cube-side));
  }
  100% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(var(--cube-side));
  }
}
.cube .sides .bottom {
  animation: bottom-animation 3s ease infinite;
  animation-delay: 0ms;
  transform: rotateX(-90deg) translateZ(var(--cube-side));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}
@keyframes bottom-animation {
  0% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(var(--cube-side));
  }
  20% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(var(--cube-side-half));
  }
  70% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(var(--cube-side-half));
  }
  90% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(var(--cube-side));
  }
  100% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(var(--cube-side));
  }
}
.cube .sides .front {
  animation: front-animation 3s ease infinite;
  animation-delay: 100ms;
  transform: rotateY(0deg) translateZ(var(--cube-side));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}
@keyframes front-animation {
  0% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(var(--cube-side));
  }
  20% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(var(--cube-side-half));
  }
  70% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(var(--cube-side-half));
  }
  90% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(var(--cube-side));
  }
  100% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(var(--cube-side));
  }
}
.cube .sides .back {
  animation: back-animation 3s ease infinite;
  animation-delay: 100ms;
  transform: rotateY(-180deg) translateZ(var(--cube-side));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

@keyframes back-animation {
  0% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(var(--cube-side));
  }
  20% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(var(--cube-side-half));
  }
  70% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(var(--cube-side-half));
  }
  90% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(var(--cube-side));
  }
  100% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(var(--cube-side));
  }
}

.cube .sides .left {
  animation: left-animation 3s ease infinite;
  animation-delay: 100ms;
  transform: rotateY(-90deg) translateZ(var(--cube-side));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

@keyframes left-animation {
  0% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(var(--cube-side));
  }
  20% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(var(--cube-side-half));
  }
  70% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(var(--cube-side-half));
  }
  90% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(var(--cube-side));
  }
  100% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(var(--cube-side));
  }
}

.cube .sides .right {
  animation: right-animation 3s ease infinite;
  animation-delay: 100ms;
  transform: rotateY(90deg) translateZ(var(--cube-side));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

@keyframes right-animation {
  0% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(var(--cube-side));
  }
  20% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(var(--cube-side-half));
  }
  70% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(var(--cube-side-half));
  }
  90% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(var(--cube-side));
  }
  100% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(var(--cube-side));
  }
}

.code-comments {
  white-space: nowrap;
  color: var(--h2-color);
  font-weight: 500;
  font-size: 1.25rem;
}

.cta-text {
  color: var(--h2-color);
  font-weight: 500;
  font-size: 0.75rem;
}

.top-bar {
  display: flex;
  justify-content: space-between;
}

.profile {
  border-radius: 50%;
  width: 2.25rem;
  height: 2.25rem;
  object-fit: cover;
  object-position: 50% 50%;
}

.profile-wrapper {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  font-size: 0.75rem;
}

.bottom-bar {
  display: flex;
  justify-content: space-between;
  width: 100%;
  gap: 0.5rem;
  font-size: 0.75rem;
}

.modern-frontend-developer {
  max-width: 12rem;
}

.learning-link {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: #705cff;
}

.learning-link img {
  width: 2.25rem;
  height: 2.25rem;
}
/*DNA LOADER styling*/

/* @import "normalize.css"; */

/* *,
*:after,
*:before {
	box-sizing: border-box;
} */

/* .body { */
/* display: grid;
	place-items: center;
	min-height: 100vh; */
/* font-family:  'Google Sans', sans-serif, system-ui; */
/* transform-style: preserve-3d;
	perspective: 100vmin; */
/* background: hsl(165, 15%, 95%); */
/* }	 */
/* 


.dna {
	height: 65vmin;
	aspect-ratio: 2/5;
	display: grid;
	transform-style: preserve-3d;
	transform: rotateX(0deg);
	rotate: 30deg;
	gap: 0.5vmin;
	animation: rotate 14s infinite linear;
}

@keyframes spin {
	to {
		transform: rotateY(360deg);
	}
}

.strand {
	--speed: 2;
	--delay: calc(sin((var(--index) / var(--total)) * 45deg) * var(--speed) * -1s);
	width: 100%;
	transform-style: preserve-3d;
	display: flex;
	justify-content: space-between;
}

@keyframes rotate {
	to {
		transform: rotate(360deg);
	}
}

.strand__node {
	background: var(--bg, white);
	height: 100%;
	aspect-ratio: 1;
	border-radius: 50%;
	animation: jump calc(var(--speed) * 1s) var(--delay, 0) infinite ease-in-out;
	border: 0.5vmin solid black;
}

.strand:before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 94%;
	height: 30%;
	background: white;
	transform: translate3d(-50%, -50%, -2px);
	transform-origin: center;
	animation: scale calc(var(--speed) * 1s) var(--delay, 0) infinite linear;
	border: 0.5vmin solid black;
}

@keyframes scale {
	25%, 75% {
		transform: translate3d(-50%, -50%, -2px) scaleX(0);
	}
	0%, 50%, 100% {
		transform: translate3d(-50%, -50%, -2px) scaleX(1);	
	}
}

.strand__node:first-of-type {
	--destination: calc((65vmin * (2 / 5)) - 100%);

}
.strand__node:last-of-type {
	--destination: calc((-65vmin * (2 / 5)) + 100%);
	animation-direction: reverse;

}

.strand__node:after {
  display: none;
	content: "";
	height: 15%;
	aspect-ratio: 1;
	background: var(--bg, white);
	position: absolute;
	border-radius: 50%;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%) rotate(0deg) translateY(450%);
	animation: orbit calc(var(--speed) * 0.35s) var(--delay, 0) infinite linear;
}

@keyframes orbit {
	100% {
		transform: translate(-50%, -50%) rotate(360deg) translateY(450%);
	}
}

@keyframes jump {
	25% {
		translate: 0 0 1px;
	}
	50% {
		transform: translateX(var(--destination));
	}
	75% {
		translate: 0 0 -1px;
	}
} */
